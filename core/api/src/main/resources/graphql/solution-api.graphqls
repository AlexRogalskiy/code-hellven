extend type Query {
    # Find all solutions
    searchSolutions(filter: SolutionFilter = {}, sort: [SolutionSort!] = [{field: SUBMIT_DATE}, {field: RUNNING_TIME}], page: PageInput = {number: 0, size: 20}): PagedSolutions!
}

input SolutionFilter {
    finisherName: String,
    taskName: String,
    language: Language,
    runningLongerThan: Int
    runningShorterThan: Int
    submittedAfter: LocalDateTime
    submittedBefore: LocalDateTime
}

input SolutionSort {
    field: SolutionSortField!,
    direction: SortDirection
}

enum SolutionSortField {
    RUNNING_TIME, SUBMIT_DATE, LANGUAGE
}

type PagedSolutions {
    page: PageOutput!
    content: [Solution!]
}

type Solution {
    runningTime: Int!

    codeSnippet: CodeSnippet!

    finisher: User!

    task: Task!

    submitDate: LocalDateTime!
}