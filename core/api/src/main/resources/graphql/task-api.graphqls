extend type Query {
    # Find all tasks
    searchTasks(filter: TaskFilter = {}, sort: [TaskSort] = [{field: NAME}, {field: DIFFICULTY}], page: PageInput = {number: 0, size: 20}): PagedTasks!
}

input TaskFilter {
    anyTag: [String!],
    difficulty: Difficulty
    active: Boolean
}

input TaskSort {
    field: TaskSortField!,
    direction: SortDirection
}

enum TaskSortField {
    NAME, FAILS, LIKES, DIFFICULTY, COMPLETES
}

type PagedTasks {
    page: PageOutput!
    content: [Task]
}

type Task {
    creator: User!

    name: String!

    description: String!

    tags: [String]

    active: Boolean!

    failedAttempts: Int!

    likeCount: Int!

    difficulty: Difficulty!

    solutions: [Solution!]

    tests: [CodeSnippet!]

    initialCode: [CodeSnippet!]
}